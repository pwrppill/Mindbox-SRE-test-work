---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appname
  labels:
    app: appname
spec:
  #Количество постоянно запущенных реплик
  replicas: 2
  # Стратегия развёртывания RollingUpdate обновляет Pod'ы порциями  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: appname
  template:
    metadata:
      labels:
        app: appname
    spec:
    #Размещаем поды по разным нодам. Запрещаем подам с меткой app=appname размещаться на ноде с таким же hostname
    #Если у нод указаны лейблы зоны доступности можно прописать распределение под по разным зонам
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - appname
            topologyKey: "kubernetes.io/hostname"
      #"потребление ровное в районе 0.1 CPU. По памяти всегда “ровно” в районе 128M memory"
      #Описываем минимальные требования к ресурсам requests и ограничиваем потребление ресурсов limits          
      containers:
        - name: appname
          image: path_to_container_image
          imagePullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: 0.1                    
          ports:
            - name: appname
              containerPort: 80
              
          livenessProbe:
            httpGet:     
              path: /health     
              port: 80
            initialDelaySeconds: 45
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 6
#"на первые запросы приложению требуется значительно больше ресурсов CPU" 
#Описываем вертикальное масштабирование для запуска приложения
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: appname-vpa
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: appname
  updatePolicy:
    updateMode: "Initial"
  resourcePolicy:
    containerPolicies:
      - containerName: "*"
        minAllowed:
          cpu: 0m
          memory: 0Mi
        maxAllowed:
          cpu: 0.8
          memory: 256Mi
        controlledResources: ["cpu", "memory"]
        controlledValues: RequestsAndLimits            
            
#"по результатам нагрузочного теста известно, что 4 пода справляются с пиковой нагрузкой"
#Описываем горизонтальное масштабирование для пиковых нагрузок   
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: appname-hpa
  labels:
    app: appname-hpa
#Описываем минимальное и максимальное количество реплик
spec:
  minReplicas: 2
  maxReplicas: 4
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: appname
  metrics:
    — type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90             